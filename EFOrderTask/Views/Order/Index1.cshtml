@model IEnumerable<EFOrderTask.Models.Order>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<p>
    <a  asp-controller="Order" asp-action="CreateOrder">Create Order</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index1" asp-route-sortOrder="@ViewData["NameSortParm"]">Customer Name</a>
            </th>
            <th>
                <a asp-action="Index1" asp-route-sortOrder="@ViewData["PriceSortParm"]"> Date</a>
            </th>
         @*   <th>
                <a asp-action="Index1" asp-route-sortOrder="@ViewData["UnitTypeSortParm"]">Unit Type</a>
            </th>*@
            <th>
                <a asp-action="Index1" asp-route-sortOrder="@ViewData["QuantitySortParm"]">Total Price</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
               @* @Html.DisplayFor(modelItem => item.Date)*@
                @Html.DisplayFor(modelItem => item.Customer_Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total_Price)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Order_Id">Edit</a> |
                <a asp-action="OrderedItem" asp-route-id="@item.Order_Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Order_Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
